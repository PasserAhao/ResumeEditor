{"version":3,"file":"js/8813.7a09a468.js","mappings":"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","sources":["webpack://resume/./node_modules/@lezer/xml/dist/index.js","webpack://resume/./node_modules/@codemirror/lang-xml/dist/index.js"],"sourcesContent":["import { ContextTracker, ExternalTokenizer, LRParser } from '@lezer/lr';\nimport { styleTags, tags } from '@lezer/highlight';\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst StartTag = 1,\n  StartCloseTag = 2,\n  MissingCloseTag = 3,\n  mismatchedStartCloseTag = 4,\n  incompleteStartCloseTag = 5,\n  commentContent$1 = 35,\n  piContent$1 = 36,\n  cdataContent$1 = 37,\n  Element = 11,\n  OpenTag = 13;\n\n/* Hand-written tokenizer for XML tag matching. */\n\nfunction nameChar(ch) {\n  return ch == 45 || ch == 46 || ch == 58 || ch >= 65 && ch <= 90 || ch == 95 || ch >= 97 && ch <= 122 || ch >= 161\n}\n\nfunction isSpace(ch) {\n  return ch == 9 || ch == 10 || ch == 13 || ch == 32\n}\n\nlet cachedName = null, cachedInput = null, cachedPos = 0;\nfunction tagNameAfter(input, offset) {\n  let pos = input.pos + offset;\n  if (cachedInput == input && cachedPos == pos) return cachedName\n  while (isSpace(input.peek(offset))) offset++;\n  let name = \"\";\n  for (;;) {\n    let next = input.peek(offset);\n    if (!nameChar(next)) break\n    name += String.fromCharCode(next);\n    offset++;\n  }\n  cachedInput = input; cachedPos = pos;\n  return cachedName = name || null\n}\n\nfunction ElementContext(name, parent) {\n  this.name = name;\n  this.parent = parent;\n  this.hash = parent ? parent.hash : 0;\n  for (let i = 0; i < name.length; i++) this.hash += (this.hash << 4) + name.charCodeAt(i) + (name.charCodeAt(i) << 8);\n}\n\nconst elementContext = new ContextTracker({\n  start: null,\n  shift(context, term, stack, input) {\n    return term == StartTag ? new ElementContext(tagNameAfter(input, 1) || \"\", context) : context\n  },\n  reduce(context, term) {\n    return term == Element && context ? context.parent : context\n  },\n  reuse(context, node, _stack, input) {\n    let type = node.type.id;\n    return type == StartTag || type == OpenTag\n      ? new ElementContext(tagNameAfter(input, 1) || \"\", context) : context\n  },\n  hash(context) { return context ? context.hash : 0 },\n  strict: false\n});\n\nconst startTag = new ExternalTokenizer((input, stack) => {\n  if (input.next != 60 /* '<' */) return\n  input.advance();\n  if (input.next == 47 /* '/' */) {\n    input.advance();\n    let name = tagNameAfter(input, 0);\n    if (!name) return input.acceptToken(incompleteStartCloseTag)\n    if (stack.context && name == stack.context.name) return input.acceptToken(StartCloseTag)\n    for (let cx = stack.context; cx; cx = cx.parent) if (cx.name == name) return input.acceptToken(MissingCloseTag, -2)\n    input.acceptToken(mismatchedStartCloseTag);\n  } else if (input.next != 33 /* '!' */ && input.next != 63 /* '?' */) {\n    return input.acceptToken(StartTag)\n  }\n}, {contextual: true});\n\nfunction scanTo(type, end) {\n  return new ExternalTokenizer(input => {\n    for (let endPos = 0, len = 0;; len++) {\n      if (input.next < 0) {\n        if (len) input.acceptToken(type);\n        break\n      } \n      if (input.next == end.charCodeAt(endPos)) {\n        endPos++;\n        if (endPos == end.length) {\n          if (len >= end.length) input.acceptToken(type, 1 - end.length);\n          break\n        }\n      } else {\n        endPos = input.next == end.charCodeAt(0) ? 1 : 0;\n      }\n      input.advance();\n    }\n  })\n}\n\nconst commentContent = scanTo(commentContent$1, \"-->\");\nconst piContent = scanTo(piContent$1, \"?>\");\nconst cdataContent = scanTo(cdataContent$1, \"]]>\");\n\nconst xmlHighlighting = styleTags({\n  Text: tags.content,\n  \"StartTag StartCloseTag EndTag SelfCloseEndTag\": tags.angleBracket,\n  TagName: tags.tagName,\n  \"MismatchedCloseTag/Tagname\": [tags.tagName, tags.invalid],\n  AttributeName: tags.attributeName,\n  AttributeValue: tags.attributeValue,\n  Is: tags.definitionOperator,\n  \"EntityReference CharacterReference\": tags.character,\n  Comment: tags.blockComment,\n  ProcessingInst: tags.processingInstruction,\n  DoctypeDecl: tags.documentMeta,\n  Cdata: tags.special(tags.string)\n});\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst parser = LRParser.deserialize({\n  version: 14,\n  states: \",SOQOaOOOrOxO'#CfOzOpO'#CiO!tOaO'#CgOOOP'#Cg'#CgO!{OrO'#CrO#TOtO'#CsO#]OpO'#CtOOOP'#DS'#DSOOOP'#Cv'#CvQQOaOOOOOW'#Cw'#CwO#eOxO,59QOOOP,59Q,59QOOOO'#Cx'#CxO#mOpO,59TO#uO!bO,59TOOOP'#C{'#C{O$TOaO,59RO$[OpO'#CoOOOP,59R,59ROOOQ'#C|'#C|O$dOrO,59^OOOP,59^,59^OOOS'#C}'#C}O$lOtO,59_OOOP,59_,59_O$tOpO,59`O$|OpO,59`OOOP-E6t-E6tOOOW-E6u-E6uOOOP1G.l1G.lOOOO-E6v-E6vO%UO!bO1G.oO%UO!bO1G.oO%dOpO'#CkO%lO!bO'#CyO%zO!bO1G.oOOOP1G.o1G.oOOOP1G.w1G.wOOOP-E6y-E6yOOOP1G.m1G.mO&VOpO,59ZO&_OpO,59ZOOOQ-E6z-E6zOOOP1G.x1G.xOOOS-E6{-E6{OOOP1G.y1G.yO&gOpO1G.zO&gOpO1G.zOOOP1G.z1G.zO&oO!bO7+$ZO&}O!bO7+$ZOOOP7+$Z7+$ZOOOP7+$c7+$cO'YOpO,59VO'bOpO,59VO'jO!bO,59eOOOO-E6w-E6wO'xOpO1G.uO'xOpO1G.uOOOP1G.u1G.uO(QOpO7+$fOOOP7+$f7+$fO(YO!bO<<GuOOOP<<Gu<<GuOOOP<<G}<<G}O'bOpO1G.qO'bOpO1G.qO(eO#tO'#CnOOOO1G.q1G.qO(sOpO7+$aOOOP7+$a7+$aOOOP<<HQ<<HQOOOPAN=aAN=aOOOPAN=iAN=iO'bOpO7+$]OOOO7+$]7+$]OOOO'#Cz'#CzO({O#tO,59YOOOO,59Y,59YOOOP<<G{<<G{OOOO<<Gw<<GwOOOO-E6x-E6xOOOO1G.t1G.t\",\n  stateData: \")Z~OPQOSVOTWOVWOWWOXWOiXOxPO}TO!PUO~OuZOw]O~O^`Oy^O~OPQOQcOSVOTWOVWOWWOXWOxPO}TO!PUO~ORdO~P!SOseO|gO~OthO!OjO~O^lOy^O~OuZOwoO~O^qOy^O~O[vO`sOdwOy^O~ORyO~P!SO^{Oy^O~OseO|}O~OthO!O!PO~O^!QOy^O~O[!SOy^O~O[!VO`sOd!WOy^O~Oa!YOy^O~Oy^O[mX`mXdmX~O[!VO`sOd!WO~O^!]Oy^O~O[!_Oy^O~O[!aOy^O~O[!cO`sOd!dOy^O~O[!cO`sOd!dO~Oa!eOy^O~Oy^Oz!gO~Oy^O[ma`madma~O[!jOy^O~O[!kOy^O~O[!lO`sOd!mO~OW!pOX!pOz!rO{!pO~O[!sOy^O~OW!pOX!pOz!vO{!pO~O\",\n  goto: \"%[wPPPPPPPPPPxxP!OP!UPP!_!iP!oxxxP!u!{#R$Z$j$p$v$|PPPP%SXWORYbXRORYb_t`qru!T!U!bQ!h!YS!o!e!fR!t!nQdRRybXSORYbQYORmYQ[PRn[Q_QQkVjp_krz!R!T!X!Z!^!`!f!i!nQr`QzcQ!RlQ!TqQ!XsQ!ZtQ!^{Q!`!QQ!f!YQ!i!]R!n!eQu`S!UqrU![u!U!bR!b!TQ!q!gR!u!qQbRRxbQfTR|fQiUR!OiSXOYTaRb\",\n  nodeNames: \"⚠ StartTag StartCloseTag MissingCloseTag StartCloseTag StartCloseTag Document Text EntityReference CharacterReference Cdata Element EndTag OpenTag TagName Attribute AttributeName Is AttributeValue CloseTag SelfCloseEndTag SelfClosingTag Comment ProcessingInst MismatchedCloseTag DoctypeDecl\",\n  maxTerm: 47,\n  context: elementContext,\n  nodeProps: [\n    [\"closedBy\", 1,\"SelfCloseEndTag EndTag\",13,\"CloseTag MissingCloseTag\"],\n    [\"openedBy\", 12,\"StartTag StartCloseTag\",19,\"OpenTag\",20,\"StartTag\"]\n  ],\n  propSources: [xmlHighlighting],\n  skippedNodes: [0],\n  repeatNodeCount: 8,\n  tokenData: \"IX~R!XOX$nXY&kYZ&kZ]$n]^&k^p$npq&kqr$nrs'ssv$nvw(Zw}$n}!O*l!O!P$n!P!Q,{!Q![$n![!].e!]!^$n!^!_1v!_!`Cz!`!aDm!a!bE`!b!c$n!c!}.e!}#P$n#P#QFx#Q#R$n#R#S.e#S#T$n#T#o.e#o%W$n%W%o.e%o%p$n%p&a.e&a&b$n&b1p.e1p4U$n4U4d.e4d4e$n4e$IS.e$IS$I`$n$I`$Ib.e$Ib$Kh$n$Kh%#t.e%#t&/x$n&/x&Et.e&Et&FV$n&FV;'S.e;'S;:j1p;:j;=`&e<%l?&r$n?&r?Ah.e?Ah?BY$n?BY?Mn.e?MnO$nX$uWVP{WOr$nrs%_sv$nw!^$n!^!_%y!_;'S$n;'S;=`&e<%lO$nP%dTVPOv%_w!^%_!_;'S%_;'S;=`%s<%lO%_P%vP;=`<%l%_W&OT{WOr%ysv%yw;'S%y;'S;=`&_<%lO%yW&bP;=`<%l%yX&hP;=`<%l$n_&t_VP{WyUOX$nXY&kYZ&kZ]$n]^&k^p$npq&kqr$nrs%_sv$nw!^$n!^!_%y!_;'S$n;'S;=`&e<%lO$nZ'zTzYVPOv%_w!^%_!_;'S%_;'S;=`%s<%lO%_~(^VOp(sqs(sst)ht!](s!^;'S(s;'S;=`)b<%lO(s~(vVOp(sqs(st!](s!]!^)]!^;'S(s;'S;=`)b<%lO(s~)bOW~~)eP;=`<%l(s~)kTOp)zq!])z!^;'S)z;'S;=`*f<%lO)z~)}UOp)zq!])z!]!^*a!^;'S)z;'S;=`*f<%lO)z~*fOX~~*iP;=`<%l)zZ*sYVP{WOr$nrs%_sv$nw}$n}!O+c!O!^$n!^!_%y!_;'S$n;'S;=`&e<%lO$nZ+jYVP{WOr$nrs%_sv$nw!^$n!^!_%y!_!`$n!`!a,Y!a;'S$n;'S;=`&e<%lO$nZ,cW|QVP{WOr$nrs%_sv$nw!^$n!^!_%y!_;'S$n;'S;=`&e<%lO$n]-SYVP{WOr$nrs%_sv$nw!^$n!^!_%y!_!`$n!`!a-r!a;'S$n;'S;=`&e<%lO$n]-{WdSVP{WOr$nrs%_sv$nw!^$n!^!_%y!_;'S$n;'S;=`&e<%lO$n_.p!O`S^QVP{WOr$nrs%_sv$nw}$n}!O.e!O!P.e!P!Q$n!Q![.e![!].e!]!^$n!^!_%y!_!c$n!c!}.e!}#R$n#R#S.e#S#T$n#T#o.e#o$}$n$}%O.e%O%W$n%W%o.e%o%p$n%p&a.e&a&b$n&b1p.e1p4U.e4U4d.e4d4e$n4e$IS.e$IS$I`$n$I`$Ib.e$Ib$Je$n$Je$Jg.e$Jg$Kh$n$Kh%#t.e%#t&/x$n&/x&Et.e&Et&FV$n&FV;'S.e;'S;:j1p;:j;=`&e<%l?&r$n?&r?Ah.e?Ah?BY$n?BY?Mn.e?MnO$n_1sP;=`<%l.eX1{W{WOq%yqr2esv%yw!a%y!a!bCd!b;'S%y;'S;=`&_<%lO%yX2j]{WOr%ysv%yw}%y}!O3c!O!f%y!f!g4e!g!}%y!}#O9t#O#W%y#W#X@Q#X;'S%y;'S;=`&_<%lO%yX3hV{WOr%ysv%yw}%y}!O3}!O;'S%y;'S;=`&_<%lO%yX4UT}P{WOr%ysv%yw;'S%y;'S;=`&_<%lO%yX4jV{WOr%ysv%yw!q%y!q!r5P!r;'S%y;'S;=`&_<%lO%yX5UV{WOr%ysv%yw!e%y!e!f5k!f;'S%y;'S;=`&_<%lO%yX5pV{WOr%ysv%yw!v%y!v!w6V!w;'S%y;'S;=`&_<%lO%yX6[V{WOr%ysv%yw!{%y!{!|6q!|;'S%y;'S;=`&_<%lO%yX6vV{WOr%ysv%yw!r%y!r!s7]!s;'S%y;'S;=`&_<%lO%yX7bV{WOr%ysv%yw!g%y!g!h7w!h;'S%y;'S;=`&_<%lO%yX7|X{WOr7wrs8isv7wvw8iw!`7w!`!a9W!a;'S7w;'S;=`9n<%lO7wP8lTO!`8i!`!a8{!a;'S8i;'S;=`9Q<%lO8iP9QOiPP9TP;=`<%l8iX9_TiP{WOr%ysv%yw;'S%y;'S;=`&_<%lO%yX9qP;=`<%l7wX9yX{WOr%ysv%yw!e%y!e!f:f!f#V%y#V#W=t#W;'S%y;'S;=`&_<%lO%yX:kV{WOr%ysv%yw!f%y!f!g;Q!g;'S%y;'S;=`&_<%lO%yX;VV{WOr%ysv%yw!c%y!c!d;l!d;'S%y;'S;=`&_<%lO%yX;qV{WOr%ysv%yw!v%y!v!w<W!w;'S%y;'S;=`&_<%lO%yX<]V{WOr%ysv%yw!c%y!c!d<r!d;'S%y;'S;=`&_<%lO%yX<wV{WOr%ysv%yw!}%y!}#O=^#O;'S%y;'S;=`&_<%lO%yX=eT{WxPOr%ysv%yw;'S%y;'S;=`&_<%lO%yX=yV{WOr%ysv%yw#W%y#W#X>`#X;'S%y;'S;=`&_<%lO%yX>eV{WOr%ysv%yw#T%y#T#U>z#U;'S%y;'S;=`&_<%lO%yX?PV{WOr%ysv%yw#h%y#h#i?f#i;'S%y;'S;=`&_<%lO%yX?kV{WOr%ysv%yw#T%y#T#U<r#U;'S%y;'S;=`&_<%lO%yX@VV{WOr%ysv%yw#c%y#c#d@l#d;'S%y;'S;=`&_<%lO%yX@qV{WOr%ysv%yw#V%y#V#WAW#W;'S%y;'S;=`&_<%lO%yXA]V{WOr%ysv%yw#h%y#h#iAr#i;'S%y;'S;=`&_<%lO%yXAwV{WOr%ysv%yw#m%y#m#nB^#n;'S%y;'S;=`&_<%lO%yXBcV{WOr%ysv%yw#d%y#d#eBx#e;'S%y;'S;=`&_<%lO%yXB}V{WOr%ysv%yw#X%y#X#Y7w#Y;'S%y;'S;=`&_<%lO%yXCkT!PP{WOr%ysv%yw;'S%y;'S;=`&_<%lO%yZDTWaQVP{WOr$nrs%_sv$nw!^$n!^!_%y!_;'S$n;'S;=`&e<%lO$n_DvW[UVP{WOr$nrs%_sv$nw!^$n!^!_%y!_;'S$n;'S;=`&e<%lO$nZEgYVP{WOr$nrs%_sv$nw!^$n!^!_%y!_!`$n!`!aFV!a;'S$n;'S;=`&e<%lO$nZF`W!OQVP{WOr$nrs%_sv$nw!^$n!^!_%y!_;'S$n;'S;=`&e<%lO$nZGPYVP{WOr$nrs%_sv$nw!^$n!^!_%y!_#P$n#P#QGo#Q;'S$n;'S;=`&e<%lO$nZGvYVP{WOr$nrs%_sv$nw!^$n!^!_%y!_!`$n!`!aHf!a;'S$n;'S;=`&e<%lO$nZHoWwQVP{WOr$nrs%_sv$nw!^$n!^!_%y!_;'S$n;'S;=`&e<%lO$n\",\n  tokenizers: [startTag, commentContent, piContent, cdataContent, 0, 1, 2, 3],\n  topRules: {\"Document\":[0,6]},\n  tokenPrec: 0\n});\n\nexport { parser };\n","import { parser } from '@lezer/xml';\nimport { syntaxTree, LRLanguage, indentNodeProp, foldNodeProp, bracketMatchingHandle, LanguageSupport } from '@codemirror/language';\n\nfunction tagName(doc, tag) {\n    let name = tag && tag.getChild(\"TagName\");\n    return name ? doc.sliceString(name.from, name.to) : \"\";\n}\nfunction elementName(doc, tree) {\n    let tag = tree && tree.firstChild;\n    return !tag || tag.name != \"OpenTag\" ? \"\" : tagName(doc, tag);\n}\nfunction attrName(doc, tag, pos) {\n    let attr = tag && tag.getChildren(\"Attribute\").find(a => a.from <= pos && a.to >= pos);\n    let name = attr && attr.getChild(\"AttributeName\");\n    return name ? doc.sliceString(name.from, name.to) : \"\";\n}\nfunction findParentElement(tree) {\n    for (let cur = tree && tree.parent; cur; cur = cur.parent)\n        if (cur.name == \"Element\")\n            return cur;\n    return null;\n}\nfunction findLocation(state, pos) {\n    var _a;\n    let at = syntaxTree(state).resolveInner(pos, -1), inTag = null;\n    for (let cur = at; !inTag && cur.parent; cur = cur.parent)\n        if (cur.name == \"OpenTag\" || cur.name == \"CloseTag\" || cur.name == \"SelfClosingTag\" || cur.name == \"MismatchedCloseTag\")\n            inTag = cur;\n    if (inTag && (inTag.to > pos || inTag.lastChild.type.isError)) {\n        let elt = inTag.parent;\n        if (at.name == \"TagName\")\n            return inTag.name == \"CloseTag\" || inTag.name == \"MismatchedCloseTag\"\n                ? { type: \"closeTag\", from: at.from, context: elt }\n                : { type: \"openTag\", from: at.from, context: findParentElement(elt) };\n        if (at.name == \"AttributeName\")\n            return { type: \"attrName\", from: at.from, context: inTag };\n        if (at.name == \"AttributeValue\")\n            return { type: \"attrValue\", from: at.from, context: inTag };\n        let before = at == inTag || at.name == \"Attribute\" ? at.childBefore(pos) : at;\n        if ((before === null || before === void 0 ? void 0 : before.name) == \"StartTag\")\n            return { type: \"openTag\", from: pos, context: findParentElement(elt) };\n        if ((before === null || before === void 0 ? void 0 : before.name) == \"StartCloseTag\" && before.to <= pos)\n            return { type: \"closeTag\", from: pos, context: elt };\n        if ((before === null || before === void 0 ? void 0 : before.name) == \"Is\")\n            return { type: \"attrValue\", from: pos, context: inTag };\n        if (before)\n            return { type: \"attrName\", from: pos, context: inTag };\n        return null;\n    }\n    else if (at.name == \"StartCloseTag\") {\n        return { type: \"closeTag\", from: pos, context: at.parent };\n    }\n    while (at.parent && at.to == pos && !((_a = at.lastChild) === null || _a === void 0 ? void 0 : _a.type.isError))\n        at = at.parent;\n    if (at.name == \"Element\" || at.name == \"Text\" || at.name == \"Document\")\n        return { type: \"tag\", from: pos, context: at.name == \"Element\" ? at : findParentElement(at) };\n    return null;\n}\nclass Element {\n    constructor(spec, attrs, attrValues) {\n        this.attrs = attrs;\n        this.attrValues = attrValues;\n        this.children = [];\n        this.name = spec.name;\n        this.completion = Object.assign(Object.assign({ type: \"type\" }, spec.completion || {}), { label: this.name });\n        this.openCompletion = Object.assign(Object.assign({}, this.completion), { label: \"<\" + this.name });\n        this.closeCompletion = Object.assign(Object.assign({}, this.completion), { label: \"</\" + this.name + \">\", boost: 2 });\n        this.closeNameCompletion = Object.assign(Object.assign({}, this.completion), { label: this.name + \">\" });\n        this.text = spec.textContent ? spec.textContent.map(s => ({ label: s, type: \"text\" })) : [];\n    }\n}\nconst Identifier = /^[:\\-\\.\\w\\u00b7-\\uffff]*$/;\nfunction attrCompletion(spec) {\n    return Object.assign(Object.assign({ type: \"property\" }, spec.completion || {}), { label: spec.name });\n}\nfunction valueCompletion(spec) {\n    return typeof spec == \"string\" ? { label: `\"${spec}\"`, type: \"constant\" }\n        : /^\"/.test(spec.label) ? spec\n            : Object.assign(Object.assign({}, spec), { label: `\"${spec.label}\"` });\n}\n/**\nCreate a completion source for the given schema.\n*/\nfunction completeFromSchema(eltSpecs, attrSpecs) {\n    let allAttrs = [], globalAttrs = [];\n    let attrValues = Object.create(null);\n    for (let s of attrSpecs) {\n        let completion = attrCompletion(s);\n        allAttrs.push(completion);\n        if (s.global)\n            globalAttrs.push(completion);\n        if (s.values)\n            attrValues[s.name] = s.values.map(valueCompletion);\n    }\n    let allElements = [], topElements = [];\n    let byName = Object.create(null);\n    for (let s of eltSpecs) {\n        let attrs = globalAttrs, attrVals = attrValues;\n        if (s.attributes)\n            attrs = attrs.concat(s.attributes.map(s => {\n                if (typeof s == \"string\")\n                    return allAttrs.find(a => a.label == s) || { label: s, type: \"property\" };\n                if (s.values) {\n                    if (attrVals == attrValues)\n                        attrVals = Object.create(attrVals);\n                    attrVals[s.name] = s.values.map(valueCompletion);\n                }\n                return attrCompletion(s);\n            }));\n        let elt = new Element(s, attrs, attrVals);\n        byName[elt.name] = elt;\n        allElements.push(elt);\n        if (s.top)\n            topElements.push(elt);\n    }\n    if (!topElements.length)\n        topElements = allElements;\n    for (let i = 0; i < allElements.length; i++) {\n        let s = eltSpecs[i], elt = allElements[i];\n        if (s.children) {\n            for (let ch of s.children)\n                if (byName[ch])\n                    elt.children.push(byName[ch]);\n        }\n        else {\n            elt.children = allElements;\n        }\n    }\n    return cx => {\n        var _a;\n        let { doc } = cx.state, loc = findLocation(cx.state, cx.pos);\n        if (!loc || (loc.type == \"tag\" && !cx.explicit))\n            return null;\n        let { type, from, context } = loc;\n        if (type == \"openTag\") {\n            let children = topElements;\n            let parentName = elementName(doc, context);\n            if (parentName) {\n                let parent = byName[parentName];\n                children = (parent === null || parent === void 0 ? void 0 : parent.children) || allElements;\n            }\n            return {\n                from,\n                options: children.map(ch => ch.completion),\n                validFor: Identifier\n            };\n        }\n        else if (type == \"closeTag\") {\n            let parentName = elementName(doc, context);\n            return parentName ? {\n                from,\n                to: cx.pos + (doc.sliceString(cx.pos, cx.pos + 1) == \">\" ? 1 : 0),\n                options: [((_a = byName[parentName]) === null || _a === void 0 ? void 0 : _a.closeNameCompletion) || { label: parentName + \">\", type: \"type\" }],\n                validFor: Identifier\n            } : null;\n        }\n        else if (type == \"attrName\") {\n            let parent = byName[tagName(doc, context)];\n            return {\n                from,\n                options: (parent === null || parent === void 0 ? void 0 : parent.attrs) || globalAttrs,\n                validFor: Identifier\n            };\n        }\n        else if (type == \"attrValue\") {\n            let attr = attrName(doc, context, from);\n            if (!attr)\n                return null;\n            let parent = byName[tagName(doc, context)];\n            let values = ((parent === null || parent === void 0 ? void 0 : parent.attrValues) || attrValues)[attr];\n            if (!values || !values.length)\n                return null;\n            return {\n                from,\n                to: cx.pos + (doc.sliceString(cx.pos, cx.pos + 1) == '\"' ? 1 : 0),\n                options: values,\n                validFor: /^\"[^\"]*\"?$/\n            };\n        }\n        else if (type == \"tag\") {\n            let parentName = elementName(doc, context), parent = byName[parentName];\n            let closing = [], last = context && context.lastChild;\n            if (parentName && (!last || last.name != \"CloseTag\" || tagName(doc, last) != parentName))\n                closing.push(parent ? parent.closeCompletion : { label: \"</\" + parentName + \">\", type: \"type\", boost: 2 });\n            let options = closing.concat(((parent === null || parent === void 0 ? void 0 : parent.children) || (context ? allElements : topElements)).map(e => e.openCompletion));\n            if (context && (parent === null || parent === void 0 ? void 0 : parent.text.length)) {\n                let openTag = context.firstChild;\n                if (openTag.to > cx.pos - 20 && !/\\S/.test(cx.state.sliceDoc(openTag.to, cx.pos)))\n                    options = options.concat(parent.text);\n            }\n            return {\n                from,\n                options,\n                validFor: /^<\\/?[:\\-\\.\\w\\u00b7-\\uffff]*$/\n            };\n        }\n        else {\n            return null;\n        }\n    };\n}\n\n/**\nA language provider based on the [Lezer XML\nparser](https://github.com/lezer-parser/xml), extended with\nhighlighting and indentation information.\n*/\nconst xmlLanguage = /*@__PURE__*/LRLanguage.define({\n    name: \"xml\",\n    parser: /*@__PURE__*/parser.configure({\n        props: [\n            /*@__PURE__*/indentNodeProp.add({\n                Element(context) {\n                    let closed = /^\\s*<\\//.test(context.textAfter);\n                    return context.lineIndent(context.node.from) + (closed ? 0 : context.unit);\n                },\n                \"OpenTag CloseTag SelfClosingTag\"(context) {\n                    return context.column(context.node.from) + context.unit;\n                }\n            }),\n            /*@__PURE__*/foldNodeProp.add({\n                Element(subtree) {\n                    let first = subtree.firstChild, last = subtree.lastChild;\n                    if (!first || first.name != \"OpenTag\")\n                        return null;\n                    return { from: first.to, to: last.name == \"CloseTag\" ? last.from : subtree.to };\n                }\n            }),\n            /*@__PURE__*/bracketMatchingHandle.add({\n                \"OpenTag CloseTag\": node => node.getChild(\"TagName\")\n            })\n        ]\n    }),\n    languageData: {\n        commentTokens: { block: { open: \"<!--\", close: \"-->\" } },\n        indentOnInput: /^\\s*<\\/$/\n    }\n});\n/**\nXML language support. Includes schema-based autocompletion when\nconfigured.\n*/\nfunction xml(conf = {}) {\n    return new LanguageSupport(xmlLanguage, xmlLanguage.data.of({\n        autocomplete: completeFromSchema(conf.elements || [], conf.attributes || [])\n    }));\n}\n\nexport { completeFromSchema, xml, xmlLanguage };\n"],"names":["StartTag","StartCloseTag","MissingCloseTag","mismatchedStartCloseTag","incompleteStartCloseTag","commentContent$1","piContent$1","cdataContent$1","Element","OpenTag","nameChar","ch","isSpace","cachedName","cachedInput","cachedPos","tagNameAfter","input","offset","pos","peek","name","next","String","fromCharCode","ElementContext","parent","this","hash","i","length","charCodeAt","elementContext","start","shift","context","term","stack","reduce","reuse","node","_stack","type","id","strict","startTag","advance","acceptToken","cx","contextual","scanTo","end","endPos","len","commentContent","piContent","cdataContent","xmlHighlighting","Text","content","angleBracket","TagName","tagName","invalid","AttributeName","attributeName","AttributeValue","attributeValue","Is","definitionOperator","character","Comment","blockComment","ProcessingInst","processingInstruction","DoctypeDecl","documentMeta","Cdata","special","string","parser","deserialize","version","states","stateData","goto","nodeNames","maxTerm","nodeProps","propSources","skippedNodes","repeatNodeCount","tokenData","tokenizers","topRules","tokenPrec","doc","tag","getChild","sliceString","from","to","elementName","tree","firstChild","attrName","attr","getChildren","find","a","findParentElement","cur","findLocation","state","_a","at","resolveInner","inTag","lastChild","isError","elt","before","childBefore","constructor","spec","attrs","attrValues","children","completion","Object","assign","label","openCompletion","closeCompletion","boost","closeNameCompletion","text","textContent","map","s","Identifier","attrCompletion","valueCompletion","test","completeFromSchema","eltSpecs","attrSpecs","allAttrs","globalAttrs","create","push","global","values","allElements","topElements","byName","attrVals","attributes","concat","top","loc","explicit","parentName","options","validFor","closing","last","e","openTag","sliceDoc","xmlLanguage","define","configure","props","add","closed","textAfter","lineIndent","unit","column","subtree","first","languageData","commentTokens","block","open","close","indentOnInput","xml","conf","data","of","autocomplete","elements"],"sourceRoot":""}